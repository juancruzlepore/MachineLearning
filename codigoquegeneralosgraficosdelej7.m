function createfigure(X1, Y1, S1, C1, axes2)
%CREATEFIGURE(X1, Y1, S1, C1, AXES2)
%  X1:  scatter x
%  Y1:  scatter y
%  S1:  scatter s
%  C1:  scatter c
%  AXES2:  legend axes

%  Auto-generated by MATLAB on 24-May-2017 18:59:15

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'Position',[0.13 0.5675 0.775 0.3575]);
hold(axes1,'on');

% Create scatter
scatter1 = scatter(X1,Y1,S1,C1,'DisplayName','Datos de Censos',...
    'Parent',axes1);

% Get xdata from plot
xdata1 = get(scatter1, 'xdata');
% Get ydata from plot
ydata1 = get(scatter1, 'ydata');
% Make sure data are column vectors
xdata1 = xdata1(:);
ydata1 = ydata1(:);


% Remove NaN values and warn
nanMask1 = isnan(xdata1(:)) | isnan(ydata1(:));
if any(nanMask1)
    warning('GeneratedCode:IgnoringNaNs', ...
        'Data points with NaN coordinates will be ignored.');
    xdata1(nanMask1) = [];
    ydata1(nanMask1) = [];
end

% Find x values for plotting the fit based on xlim
axesLimits1 = xlim(axes1);
xplot1 = linspace(axesLimits1(1), axesLimits1(2));

% Prepare for plotting residuals
set(axes1,'position',[0.1300    0.5811    0.7750    0.3439]);
residAxes1 = axes('position', [0.1300    0.1100    0.7750    0.3439], ...
    'parent', gcf);
savedResids1 = zeros(length(xdata1), 2);
% Sort residuals
[sortedXdata1, xInd1] = sort(xdata1);

% Find coefficients for polynomial (order = 2)
[fitResults1,~,mu1] = polyfit(xdata1,ydata1,2);
% Evaluate polynomial
yplot1 = polyval(fitResults1,xplot1,[],mu1);

% Calculate and save residuals - evaluate using original xdata
Yfit1 = polyval(fitResults1,xdata1,[],mu1);
resid1 = ydata1 - Yfit1(:);
savedResids1(:,1) = resid1(xInd1);
% Plot the fit
fitLine1 = plot(xplot1,yplot1,'DisplayName','   quadratic',...
    'Tag','quadratic',...
    'Parent',axes1,...
    'Color',[0.494 0.184 0.556]);

% Set new line in proper position
setLineOrder(axes1,fitLine1,scatter1);

% Find coefficients for polynomial (order = 3)
[fitResults1,~,mu1] = polyfit(xdata1,ydata1,3);
% Evaluate polynomial
yplot2 = polyval(fitResults1,xplot1,[],mu1);

% Calculate and save residuals - evaluate using original xdata
Yfit1 = polyval(fitResults1,xdata1,[],mu1);
resid1 = ydata1 - Yfit1(:);
savedResids1(:,2) = resid1(xInd1);
% Plot the fit
fitLine2 = plot(xplot1,yplot2,'DisplayName','   cubic','Tag','cubic',...
    'Parent',axes1,...
    'Color',[0.466 0.674 0.188]);

% Set new line in proper position
setLineOrder(axes1,fitLine2,scatter1);

% Plot residuals in a bar plot
residPlot1 = bar(residAxes1, sortedXdata1, savedResids1);
% Set colors to match fit lines
set(residPlot1(1), 'facecolor', [0.494 0.184 0.556],'edgecolor', [0.494 0.184 0.556]);
set(residPlot1(2), 'facecolor', [0.466 0.674 0.188],'edgecolor', [0.466 0.674 0.188]);
% Set residual plot axis title
title(residAxes1, 'residuals');

% Create xlabel
xlabel({'A?o de Censo'},'FontSize',11);

% Create title
title({'Gr?fico de datos de poblaci?n de EEUU junto con aproximaciones polin?micas'},...
    'FontSize',11);

% Create ylabel
ylabel({'Cantidad de habitantes en millones'},'FontSize',11);

% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[1750 2000]);
% Create legend
legend(axes1,'show');

% Create legend
legend(axes2,'show');

%-------------------------------------------------------------------------%
function setLineOrder(axesh1, newLine1, associatedLine1)
%SETLINEORDER(AXESH1,NEWLINE1,ASSOCIATEDLINE1)
%  Set line order
%  AXESH1:  axes
%  NEWLINE1:  new line
%  ASSOCIATEDLINE1:  associated line

% Get the axes children
hChildren = get(axesh1,'Children');
% Remove the new line
hChildren(hChildren==newLine1) = [];
% Get the index to the associatedLine
lineIndex = find(hChildren==associatedLine1);
% Reorder lines so the new line appears with associated data
hNewChildren = [hChildren(1:lineIndex-1);newLine1;hChildren(lineIndex:end)];
% Set the children:
set(axesh1,'Children',hNewChildren);

